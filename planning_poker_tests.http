@base_url = http://localhost:3000
# Leave @jwt_token blank initially, as it will be generated after login
@jwt_token = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3MzAxMTc5NTgsInVzZXJfaWQiOjF9.JJQLT2Nq-uYC3R1RWhDnwPr02wdHoHOku0lMwkDnMLk

### 1. Register a New User ###

# Register a new user
POST {{base_url}}/api/register
Content-Type: application/json

{
  "username": "Mani",
  "email": "mani@example.com",
  "password": "Manimov!",
  "nickname": "Tester"
}

### 2. Login the User ###

# Login user
POST {{base_url}}/api/login
Content-Type: application/json

{
  "username": "Mani",
  "password": "Manimov!"
}


### 1. User profile ###
# Get the authenticated user's profile
GET {{base_url}}/api/user/me
Authorization: Bearer {{jwt_token}}

###
# Create a new session
POST {{base_url}}/api/sessions
Authorization: Bearer {{jwt_token}}
Content-Type: application/json

{
  "session_name": "Sprint Planning Session"
}


###
# Join a session
POST {{base_url}}/api/sessions/1/join
Authorization: Bearer {{jwt_token}}


###
# View all participants in a session
GET {{base_url}}/api/sessions/1/participants
Authorization: Bearer {{jwt_token}}

###
# Create a new task in a session
POST {{base_url}}/api/sessions/1/tasks
Authorization: Bearer {{jwt_token}}
Content-Type: application/json

{
  "task_name": "User Login Feature",
  "task_description": "Implement user login functionality with JWT authentication"
}

###
# View all tasks in a session
GET {{base_url}}/api/sessions/1/tasks
Authorization: Bearer {{jwt_token}}